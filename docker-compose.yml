version: "3.9"
services:

  redis:
    image: redis:alpine
    ports:
      - "6379"
    deploy:
      restart_policy:
        condition: on-failure

  mysql:
    image: ${FLEET_MYSQL_IMAGE:-mysql:5.7}
    platform: ${FLEET_MYSQL_PLATFORM:-linux/x86_64}
    volumes:
      - db-data:/tmp
    command:
      [
        "mysqld",
        "--datadir=/tmp/mysqldata",
        # These 3 keys run MySQL with GTID consistency enforced to avoid issues with production deployments that use it.
        "--enforce-gtid-consistency=ON",
        "--log-bin=bin.log",
        "--server-id=master-01",
        # Required for storage of Apple MDM installers.
        "--max_allowed_packet=536870912"
      ]
    environment:
      MYSQL_ROOT_PASSWORD: toor
      MYSQL_DATABASE: fleet
      MYSQL_USER: fleet
      MYSQL_PASSWORD: insecure
    ports:
      - "3306:3306"

  fleet:
    image: fleetdm/fleet:v4.22.1
    ports:
      - "8080:8080"
    depends_on:
      - redis
      - mysql
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      FLEET_SERVER_TLS: false
      FLEET_MYSQL_ADDRESS: mysql:3306
      FLEET_MYSQL_PASSWORD: insecure
      FLEET_REDIS_ADDRESS: redis:6379
    volumes:
      - fleet-data:/tmp

  filebeat:
    image: beats:latest
    volumes:
      - fleet-data:/tmp
    command:
      - "filebeat -f /tmp/osquery_results -config foo.yml"


  fleet-migrate:
    image: fleetdm/fleet:v4.22.1
    command: fleet prepare --no-prompt=true db
    depends_on:
      - redis
      - mysql
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      FLEET_SERVER_TLS: false
      FLEET_MYSQL_ADDRESS: mysql:3306
      FLEET_MYSQL_PASSWORD: insecure
      FLEET_REDIS_ADDRESS: redis:6379

  mongodb:
    image: "mongo:5.0"
    volumes:
      - "mongodb_data:/data/db"
    restart: "on-failure"

  elasticsearch:
    environment:
      ES_JAVA_OPTS: "-Xms1g -Xmx1g -Dlog4j2.formatMsgNoLookups=true"
      bootstrap.memory_lock: "true"
      discovery.type: "single-node"
      http.host: "0.0.0.0"
      action.auto_create_index: "false"
    image: "docker.elastic.co/elasticsearch/elasticsearch-oss:7.10.2"
    ulimits:
      memlock:
        hard: -1
        soft: -1
    volumes:
      - "es_data:/usr/share/elasticsearch/data"
    restart: "on-failure"

  graylog:
    image: "${GRAYLOG_IMAGE:-graylog/graylog:4.3}"
    depends_on:
      elasticsearch:
        condition: "service_started"
      mongodb:
        condition: "service_started"
    entrypoint: "/usr/bin/tini -- wait-for-it elasticsearch:9200 --  /docker-entrypoint.sh"
    environment:
      GRAYLOG_NODE_ID_FILE: "/usr/share/graylog/data/config/node-id"
      GRAYLOG_PASSWORD_SECRET: ${GRAYLOG_PASSWORD_SECRET}
      GRAYLOG_ROOT_PASSWORD_SHA2: ${GRAYLOG_ROOT_PASSWORD_SHA2}
      GRAYLOG_HTTP_BIND_ADDRESS: "0.0.0.0:9000"
      GRAYLOG_HTTP_EXTERNAL_URI: "http://localhost:9000/"
      GRAYLOG_ELASTICSEARCH_HOSTS: "http://elasticsearch:9200"
      GRAYLOG_MONGODB_URI: "mongodb://mongodb:27017/graylog"
    ports:
      - "5044:5044/tcp"   # Beats
      - "5140:5140/udp"   # Syslog
      - "5140:5140/tcp"   # Syslog
      - "5555:5555/tcp"   # RAW TCP
      - "5555:5555/udp"   # RAW TCP
      - "9000:9000/tcp"   # Server API
      - "12201:12201/tcp" # GELF TCP
      - "12201:12201/udp" # GELF UDP
      #- "10000:10000/tcp" # Custom TCP port
      #- "10000:10000/udp" # Custom UDP port
      - "13301:13301/tcp" # Forwarder data
      - "13302:13302/tcp" # Forwarder config
    volumes:
      - "graylog_data:/usr/share/graylog/data/data"
      - "graylog_journal:/usr/share/graylog/data/journal"
    restart: "on-failure"

volumes:
  fleet-data:
  db-data:
  mongodb_data:
  es_data:
  graylog_data:
  graylog_journal: